.Button {
    --size: var(--5x);
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    background: var(--gradient-light-gray);
    border: 0;
    border-radius: 5px;
    color: var(--color-black);
    cursor: pointer;
    display: grid;
    grid-auto-flow: column;
    grid-template-columns: max-content;
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-semi-bold);
    height: var(--size);
    justify-content: center;
    line-height: var(--size);
    overflow: hidden;
    padding: 0 var(--3x);
    position: relative;
    transition: var(--transition);
}

.Button:hover {
        border-color: var(--color-dark-gray);
    }

.Button.is-rounded {
    border-radius: var(--size);
}

.Button.is-large {
    --size: var(--6x);
    font-weight: var(--font-weight-bold);
}

.Button.is-x-large {
    --size: var(--7x);
    font-size: var(--font-size-large);
    font-weight: var(--font-weight-semi-bold);
}

.Button.is-outline {
    background: var(--color-white);
    border: 1px solid var(--color-light-gray);
    color: var(--color-black);
    line-height: calc(var(--size) - 2px);
}

.Button.is-primary {
    background: transparent;
    color: var(--color-white);
    transition: var(--transition);
}

.Button.is-primary::before,
    .Button.is-primary::after {
        background: var(--gradient-teal-blue);
        content: "";
        display: block;
        left: 50%;
        padding-bottom: 100%;
        position: absolute;
        top: 50%;
        transform: translate(-50%, -50%);
        transform-origin: center;
        transition: var(--transition);
        width: 100%;
        z-index: -1;
    }

.Button.is-primary::after {
        animation-duration: 3s;
        animation-iteration-count: infinite;
        animation-name: blueprint-blocks-block-editor-button-primary-background-rotate;
        animation-timing-function: linear;
        opacity: 0;
        transition: var(--transition-slow);
    }

.Button.is-primary:hover::after {
        opacity: 1;
    }

.Button.is-primary.is-disabled {
    background: var(--gradient-gray);
    color: var(--color-black);
}

.Button.is-primary.is-disabled::before,
    .Button.is-primary.is-disabled::after {
        opacity: 0;
    }

@keyframes blueprint-blocks-block-editor-button-primary-background-rotate {
    from {
        transform: translate(-50%, -50%) scale3d(1.1, 1.1, 1) rotateZ(0deg);
    }
    to {
        transform: translate(-50%, -50%) scale3d(1.1, 1.1, 1) rotateZ(360deg);
    }
}

.Navigator {
    align-items: center;
    background: var(--color-white);
    display: grid;
    grid-template-columns: 1fr max-content;
    height: calc(var(--navigator-height) + 3px);
    padding-right: var(--5x);
    position: sticky;
    top: var(--wp-admin--admin-bar--height);
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    z-index: 50;
}

.Navigator ul {
        display: grid;
        grid-auto-flow: column;
        height: calc(var(--navigator-height) + 3px);
        justify-content: start;
        list-style: none;
        margin: 0;
        padding: 0;
        position: relative;
        z-index: 2;
    }

.Navigator li {
        cursor: pointer;
        font-size: var(--font-size-base);
        font-weight: var(--font-weight-semi-bold);
        height: var(--3x);
        margin: 0;
        padding: var(--2x) var(--4x) calc(var(--2x) + 3px);
        position: relative;
        transition: var(--transition);
    }

.Navigator li > div {
        align-items: center;
        background: var(--color-white);
        color: var(--color-darkest-gray);
        display: grid;
        gap: var(--2x);
        grid-auto-columns: max-content;
        grid-auto-flow: column;
        height: var(--3x);
        line-height: var(--3x);
        mix-blend-mode: lighten;
        padding: 0 var(--1x);
    }

.Navigator li::before {
        background: var(--gradient-teal-blue);
        bottom: calc(var(--2x) + 3px);
        content: "";
        display: block;
        left: var(--4x);
        opacity: 0;
        position: absolute;
        right: var(--4x);
        top: var(--2x);
        transition: var(--transition);
        z-index: -1;
    }

.Navigator li:hover {
        text-decoration-color: currentColor;
    }

.Navigator li.is-active {
        cursor: default;
    }

.Navigator li.is-active::before {
        opacity: 1;
    }

.Navigator img {
        display: block;
        height: var(--3x);
        -o-object-fit: contain;
           object-fit: contain;
        -o-object-position: center;
           object-position: center;
        width: var(--3x);
    }

.Navigator::after {
    background: var(--color-light-gray);
    bottom: 0;
    content: "";
    display: block;
    height: 3px;
    left: 0;
    position: absolute;
    width: 100%;
    z-index: 1;
}

.Navigator-activeIndicator {
    background: var(--gradient-teal-blue-transparent);
    bottom: 0;
    display: block;
    height: 3px;
    left: calc(1px * var(--left, 0));
    position: absolute;
    transition: var(--transition);
    width: calc(1px * var(--width, 0));
}

.Navigator-actions {
    display: grid;
    gap: var(--2x);
    grid-auto-flow: column;
    grid-template-columns: max-content;
    position: relative;
    z-index: 2;
}

.EditableString {
    --background-color: transparent;
    --color: var(--color-darkest-gray);
    --focus-color: var(--color-light-gray);
    --focus-margin: 0.2em;
    --focus-padding: 0.4em;
    --highlight-padding: 0.4em;
    --hover-color: var(--color-black);
    --line-height: 1.5em;
    --margin: 0;
    --padding: 0;
    --placeholder-color: var(--color-dark-gray);
    --placeholder-focus-color: var(--color-darker-gray);
    --rows: 1;
    color: var(--color);
    cursor: text;
    display: inline-grid;
    line-height: var(--line-height);
    margin: 0 var(--margin);
    max-width: 100%;
    min-height: calc(var(--line-height) * var(--rows));
    overflow: visible;
    padding: 0 var(--padding);
    position: relative;
    transition: var(--transition);
}

.EditableString::before {
        background: var(--background-color);
        border-radius: 0.2em;
        bottom: 0;
        content: "";
        display: block;
        left: 0;
        position: absolute;
        right: 0;
        top: 0;
        transition: var(--transition);
        z-index: -1;
    }

.EditableString.has-value:hover,
    .EditableString.has-value.has-focus {
        color: var(--hover-color);
    }

.EditableString > div {
        grid-column: 1;
        grid-row: 1;
        max-width: 100%;
        overflow: auto;
        white-space: nowrap;
    }

.EditableString .placeholder {
        color: var(--placeholder-color);
        transition: var(--transition);
    }

.EditableString.is-multiline > div {
    white-space: initial;
}

.EditableString.has-focus {
    --background-color: var(--focus-color);
    margin: 0 var(--focus-margin);
    padding: 0 var(--focus-padding);
}

.EditableString.has-focus::before {
        bottom: calc(-1 * var(--focus-margin));
        top: calc(-1 * var(--focus-margin));
    }

.EditableString.is-invalid {
    --background-color: var(--color-error);
}

.EditableString.is-invalid::before {
        bottom: calc(-1 * var(--highlight-padding));
        left: calc(-1 * var(--highlight-padding));
        right: calc(-1 * var(--highlight-padding));
        top: calc(-1 * var(--highlight-padding));
    }

.EditableString.has-focus .placeholder {
    color: var(--placeholder-focus-color);
}

.Tooltip {
    background: var(--color-lighter-gray);
    border-radius: var(--1x);
    color: var(--color-dark-gray);
    cursor: pointer;
    font-size: var(--font-size-small);
    font-weight: var(--font-weight-bold);
    height: var(--2x);
    line-height: var(--2x);
    overflow: hidden;
    position: relative;
    text-align: center;
    transition: var(--transition);
    width: var(--2x);
}

.Tooltip:hover {
    background: var(--color-accent-teal-blue);
    color: var(--color-white);
    overflow: visible;
    z-index: 20;
}

.is-disabled .Tooltip:hover {
    background: var(--color-lighter-gray);
    color: var(--color-dark-gray);
    cursor: default;
}

.Tooltip-link {
    bottom: 0;
    content: "";
    display: block;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    z-index: 10;
}

.Tooltip-label {
    background: var(--color-black);
    border-radius: 5px;
    color: var(--color-white);
    font-weight: var(--font-weight-semi-bold);
    padding: var(--1x) var(--3x);
}

.Tooltip-label:not(:last-child) {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
    }

.Tooltip-text {
    display: grid;
    gap: var(--2x);
    justify-items: start;
    padding: var(--2x) var(--3x);
}

.Tooltip-text p {
        margin: 0;
    }

.Tooltip-required {
    background: var(--color-lighter-gray);
    border-radius: var(--3x);
    color: var(--color-gray);
    font-size: var(--font-size-small);
    font-weight: var(--font-weight-semi-bold);
    line-height: var(--3x);
    height: var(--3x);
    padding: 0 var(--1x);
    width: -moz-fit-content;
    width: fit-content;
}

.Tooltip-message {
    --caret-color: var(--color-white);
    background: var(--color-white);
    border-radius: 5px;
    box-shadow: var(--box-shadow-medium);
    color: var(--color-black);
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-medium);
    line-height: var(--line-height-base);
    min-width: calc(1px * var(--width, 0));
    opacity: 0;
    position: absolute;
    text-align: left;
}

.Tooltip-message::before {
        border-left: var(--1x) solid transparent;
        border-right: var(--1x) solid transparent;
        content: "";
        display: block;
        height: 0;
        position: absolute;
        width: 0;
    }

.Tooltip:hover .Tooltip-message {
    opacity: 1;
}

.Tooltip-message.is-above {
    bottom: calc(100% + var(--1x) - 2px);
}

.Tooltip-message.is-above::before {
        border-top: var(--1x) solid var(--caret-color);
        bottom: calc(-1 * var(--1x));
    }

.Tooltip-message.is-below {
    --caret-color: var(--color-black);
    top: calc(100% + var(--1x) - 2px);
}

.Tooltip-message.is-below::before {
        border-bottom: var(--1x) solid var(--caret-color);
        top: calc(-1 * var(--1x));
    }

.Tooltip-message.is-left {
    right: calc(-1 * var(--3x));
}

.Tooltip-message.is-left::before {
        right: var(--3x);
    }

.Tooltip-message.is-right {
    left: calc(-1 * var(--3x));
}

.Tooltip-message.is-right::before {
        left: var(--3x);
    }

.BlockNameField {
    align-items: center;
    border-bottom: 2px solid var(--color-light-gray);
    display: grid;
    gap: var(--2x);
    grid-template-columns: 1fr max-content;
    padding: var(--1x) 0;
}

.BlockNameField .EditableString {
        --focus-color: transparent;
        --focus-margin: 0;
        --focus-padding: 0;
        --highlight-padding: 0.3em;
        --line-height: 1em;
    }

.BlockNameField-input {
    align-items: center;
    display: grid;
    font-size: var(--font-size-x-large);
    font-weight: var(--font-weight-medium);
    gap: var(--2x);
    grid-template-columns: repeat(3, max-content);
}

.BlockNameField-namespace {
    --color: var(--color-dark-gray);
}

.BlockNameField-name {
    --color: var(--color-black);
}

.BlockNameField-seperator {
    color: var(--color-light-gray);
}

.FieldLabel {
	align-items: center;
	color: var(--color-dark-gray);
	cursor: default;
	display: grid;
	font-size: var(--font-size-small);
	font-weight: var(--font-weight-medium);
	gap: var(--1x);
	grid-template-columns: 1fr max-content;
	line-height: 1;
	-webkit-user-select: none;
	   -moz-user-select: none;
	        user-select: none;
}
.FieldLabel .Tooltip {
		margin: -1px 0;
	}

.TextField {
    background: var(--color-white);
    border: 2px solid var(--color-black);
    border-radius: 7px;
    box-shadow: var(--box-shadow-low);
    display: grid;
    gap: var(--1x);
    grid-auto-flow: row;
    grid-template-columns: 100%;
    max-width: 640px;
    padding: var(--1x);
    position: relative;
}
.TextField :is(.EditableString, .TextField-placeholder, .TextField-value) {
        --focus-margin: 0;
        --focus-padding: 0;
        --color: var(--color-black);
        --placeholder-color: var(--color-gray);
        --placeholder-focus-color: var(--color-gray);
        font-size: var(--font-size-large);
        font-weight: var(--font-weight-semi-bold);
        line-height: 1.5;
    }
.TextField .EditableString {
        display: grid;
        overflow: auto;
        width: 100%;
    }
.TextField .TextField-placeholder {
        color: var(--color-gray);
        -webkit-user-select: none;
           -moz-user-select: none;
                user-select: none;
    }
.TextField .TextField-value {
        color: var(--color-black);
        -webkit-user-select: none;
           -moz-user-select: none;
                user-select: none;
    }

.CheckboxField {
    --size: var(--3x);
    align-items: start;
    display: grid;
    gap: var(--2x);
    grid-template-columns: max-content 1fr;
    max-width: 640px;
    position: relative;
}

.CheckboxField p {
        color: var(--color-dark-gray);
        font-size: var(--font-size-base);
        font-weight: var(--font-weight-medium);
        margin: 0 0 var(--2x);
    }

.CheckboxField a {
        color: var(--color-black);
        text-decoration: underline;
    }

.CheckboxField.is-small {
    --size: var(--2x);
    gap: var(--1x);
}

.CheckboxField-label {
    align-items: center;
    color: var(--color-black);
    display: grid;
    gap: var(--2x);
    grid-auto-columns: max-content;
    grid-auto-flow: column;
    font-size: var(--font-size-large);
    font-weight: var(--font-weight-semi-bold);
    line-height: var(--size);
    margin-bottom: var(--1x);
}

.CheckboxField-label:last-child {
        margin-bottom: 0;
    }

.CheckboxField.is-small .CheckboxField-label {
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-medium);
}

.CheckboxField-checkbox {
    background: var(--color-white);
    border: 2px solid var(--color-black);
    border-radius: 5px;
    box-shadow: var(--box-shadow-x-low);
    box-sizing: border-box;
    display: block;
    height: var(--size);
    position: relative;
    width: var(--size);
}

.CheckboxField-checkbox input[type="checkbox"] {
        -webkit-appearance: none;
           -moz-appearance: none;
                appearance: none;
        cursor: pointer;
        display: block;
        height: var(--size);
        left: 0;
        opacity: 0;
        position: absolute;
        top: 0;
        width: var(--size);
        z-index: 10;
    }

.CheckboxField-checkbox::after {
        background: url("../assets/images/icon-check.png") no-repeat center;
        background-size: contain;
        content: "";
        display: block;
        height: calc((19 / 24) * var(--size));
        left: calc((2 / 24) * var(--size));
        opacity: 0;
        position: absolute;
        top: -2px;
        transition: var(--transition);
        width: calc((26 / 24) * var(--size));
    }

.CheckboxField.is-checked > .CheckboxField-checkbox::after {
    opacity: 1;
}

.CheckboxField-content {
    display: grid;
    gap: 0;
    grid-auto-flow: row;
}

.CheckboxField-list {
    display: grid;
    gap: var(--2x);
    grid-auto-flow: row;
}


    .BlockSupportsFieldItem p {
        margin: 0 0 var(--1x);
    }

.BlockSupportsFieldItem p:last-child {
        margin-bottom: 0;
    }

.BlockSupportsFieldItem-list {
    display: grid;
    gap: var(--1x);
    margin-top: var(--2x);
}

.BlockSupportsField {
    display: grid;
    gap: var(--3x);
}

.BlockVersionField {
	align-items: center;
	display: grid;
	font-size: var(--font-size-large);
	font-weight: var(--font-weight-semi-bold);
	gap: var(--1x);
	grid-template-columns: repeat(2, max-content);
}

.BlockVersionField-label {
	color: var(--color-dark-gray);
}

.BlockVersionField-value {
	--color: var(--color-black);
}

.JsonEditor {
	background: var(--color-black);
	border-radius: 9px;
	color: var(--color-white);
	font-family: var(--font-family-monospace);
	font-size: var(--font-size-small);
	font-weight: var(--font-weight-base);
	height: 100%;
	line-height: 1.75;
	overflow: auto;
	padding: var(--5x);
	white-space: pre;
}
.JsonEditor span {
		align-items: center;
		border-radius: 5px;
		display: inline-grid;
		gap: 4px;
		grid-auto-flow: column;
		min-height: calc(var(--font-size-base) * 1.75);
		transition: var(--transition);
		vertical-align: middle;
	}
.JsonEditor .has-focus,
	.JsonEditor .has-placeholder {
		background: var(--color-darker-gray);
		border-radius: 5px;
		padding: 0 var(--1x);
	}
.JsonEditor .indent {
		margin-left: 2em;
	}
.JsonEditor .EditableString {
		--color: var(--color-white);
		--focus-color: var(--color-white);
		--hover-color: var(--color-white);
		--placeholder-color: var(--color-gray);
		--placeholder-focus-color: var(--color-gray);
	}

.ListField {
	background: var(--color-white);
	border: 2px solid var(--color-black);
	border-radius: 7px;
	box-shadow: var(--box-shadow-low);
	display: grid;
	gap: var(--1x);
	grid-auto-flow: row;
	grid-template-columns: 100%;
	max-width: 640px;
	padding: var(--1x);
	position: relative;
}

.ListField-list {
	align-items: center;
	display: flex;
	font-size: var(--font-size-large);
	font-weight: var(--font-weight-medium);
	gap: var(--1x);
	width: 100%;
}

.ListField-list :is(.EditableString, .ListField-value, .ListField-placeholder) {
		--focus-margin: 0;
		--focus-padding: 0;
		--placeholder-color: var(--color-light-gray);
		--placeholder-focus-color: var(--color-light-gray);
		--line-height: var(--3x);
		border-radius: var(--3x);
	}

.ListField-list :is(.EditableString.has-value, .ListField-value) {
		--focus-padding: var(--2x);
		--padding: var(--2x);
		background: var(--color-lighter-gray);
		font-weight: var(--font-weight-semi-bold);
	}

.ListField-list :is(.EditableString:not(.has-value), .ListField-placeholder) {
		font-size: var(--font-size-base);
	}

.ListField-placeholder {
	color: var(--color-dark-gray);
}

.ListField-value {
	padding: 0 var(--2x);
}

.SearchSelectField {
	margin-bottom: var(--3x);
	max-width: 520px;
	position: relative;
}

.SearchSelectField:last-child {
		margin-bottom: 0;
	}

.SearchSelectField-value {
	border: 1px solid var(--color-gray);
	border-radius: 5px;
	box-sizing: border-box;
	display: block;
	font-size: var(--font-size);
	font-weight: var(--font-weight-base);
	height: var(--6x);
	line-height: calc(var(--6x) - 2px);
	padding: 0 var(--2x);
	width: 100%;
}

.SearchSelectField-options {
	display: none;
	left: 0;
	position: absolute;
	top: 100%;
	width: 100%;
}

.SearchSelectField.is-open .SearchSelectField-options {
	display: block;
}

.DashiconsField {
	align-items: center;
	aspect-ratio: 1 / 1;
	background: var(--color-white);
	border: 2px solid var(--color-black);
	border-radius: 7px;
	box-shadow: var(--box-shadow-low);
	box-sizing: border-box;
	display: grid;
	height: 64px;
	justify-items: center;
	padding: var(--1x);
	position: relative;
	width: 64px;
}
.DashiconsField span {
		font-size: 36px;
		height: 36px;
		width: 36px;
	}


.SelectField {
    background: var(--color-white);
    border: 2px solid var(--color-black);
    border-radius: 7px;
    box-shadow: var(--box-shadow-low);
    display: grid;
    gap: var(--1x);
    grid-auto-flow: row;
    grid-template-columns: 100%;
    max-width: 640px;
    padding: var(--1x);
    position: relative;
}

.SelectField::before {
        border-left: 6px solid transparent;
        border-right: 6px solid transparent;
        border-top: 6px solid var(--color-black);
        content: "";
        display: block;
        height: 0;
        position: absolute;
        right: calc(var(--1x) + 2px);
        top: calc(var(--2x) + 26px);
        width: 0;
    }

.SelectField.is-open::before {
    transform: rotate(180deg);
}

.SelectField-value {
    font-size: var(--font-size-large);
    font-weight: var(--font-weight-semi-bold);
}

.SelectField-options {
    background: var(--color-white);
    border: solid var(--color-black);
    border-width: 0 2px 2px;
    border-radius: 0 0 7px 7px;
    box-shadow:
        3px -3px 0 #c6cacd,
        3px 3px 0 #27243233;
    box-sizing: border-box;
    display: none;
    left: -2px;
    padding: 9px 0 calc(var(--1x) / 2);
    position: absolute;
    top: calc(100% - 7px);
    width: calc(100% + 4px);
}

.SelectField-options::before {
        background: var(--color-lighter-gray);
        content: "";
        display: block;
        height: 1px;
        margin: 0 0 var(--1x);
        width: 100%;
    }

.SelectField-options::after {
        background: var(--color-white);
        border-right: 2px solid var(--color-black);
        content: "";
        display: block;
        height: 3px;
        left: 0;
        position: absolute;
        top: -3px;
        width: 100%;
    }

.SelectField-options > div {
        cursor: pointer;
        font-size: var(--font-size-base);
        font-weight: var(--font-weight-medium);
        padding: calc(var(--1x) / 2) var(--1x);
        transition: var(--transition);
    }

.SelectField-options > div:hover {
        background: var(--color-lighter-gray);
    }

.SelectField.is-open .SelectField-options {
    display: grid;
}

.PageBlockJson {
    padding: var(--5x);
}

.PageBlockJson-grid {
    align-items: start;
    display: grid;
    grid-gap: var(--5x);
    grid-template-columns: minmax(0, 7fr) minmax(0, 5fr);
}

.PageBlockJson-fields {
    display: grid;
    gap: var(--8x);
    grid-auto-flow: row;
}

.PageBlockJson-fieldset {
    display: grid;
    gap: var(--3x);
    grid-auto-flow: row;
}

.PageBlockJson-header {
    align-items: center;
    color: var(--color-black);
    display: grid;
    gap: var(--2x);
    grid-auto-columns: max-content;
    grid-auto-flow: column;
    font-size: var(--font-size-large);
    font-weight: var(--font-weight-medium);
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
}

.PageBlockJson-json {
    position: sticky;
    top: calc(
        var(--wp-admin--admin-bar--height) + var(--navigator-height) + var(--5x)
    );
}

.BlueprintAttributeHandle {
	background: var(--color-darkest-gray);
	border: 2px solid var(--color-lighter-gray);
	border-radius: 10px;
	box-sizing: border-box;
	height: 10px;
	position: absolute;
	right: 0;
	top: calc(50% - 5px);
	width: 10px;
}

.BlueprintAttributeHandle.hide {
	opacity: 0;
}

.BlueprintAttributeHandle.is-left {
	left: -5px;
}

.BlueprintAttributeHandle.is-right {
	right: 0;
}

.BlueprintWarning {
	position: absolute;
	top: calc(50% - 8px);
}

.BlueprintWarning.is-left {
	left: calc(-1 * (16px + var(--1x)));
}

.BlueprintWarning.is-right {
	right: calc(-1 * (16px + var(--1x)));
}

.BlueprintWarning-icon {
	background: var(--gradient-orange-red);
	border-radius: 16px;
	color: var(--color-white);
	font-family: var(--font-family);
	font-size: var(--font-size-x-small);
	font-weight: var(--font-weight-bold);
	height: 16px;
	line-height: 16px;
	position: relative;
	text-align: center;
	width: 16px;
}

.BlueprintAttribute {
	border-bottom: 2px solid var(--color-darker-gray);
	color: var(--color-dark-gray);
	font-family: var(--font-family-monospace);
	font-size: var(--font-size-x-small);
	font-weight: var(--font-weight-medium);
	padding: var(--2x) 0;
	position: relative;
}

.BlueprintAttribute :is(.key, .value) {
		color: var(--color-gray);
	}

.BlueprintAttribute .indent {
		margin-left: var(--2x);
	}

.BlueprintAttribute .EditableString {
		--color: var(--color-gray);
		--focus-color: var(--color-darker-slate);
		--hover-color: var(--color-white);
		--placeholder-color: var(--color-dark-gray);
		--placeholder-focus-color: var(--color-dark-slate);
	}

.BlueprintAttribute-line {
	position: relative;
}

.BlueprintAttribute-line > span {
		display: inline-block;
		position: relative;
	}

.BlueprintAttribute-line .BlueprintWarning {
		opacity: 0;
		transition: var(--transition);
	}

.BlueprintAttribute-line .is-invalid > .BlueprintWarning {
		opacity: 1;
	}

.BlueprintAttribute-handle {
	background: var(--color-darkest-gray);
	border: 2px solid var(--color-lighter-gray);
	border-radius: 10px;
	box-sizing: border-box;
	height: 10px;
	position: absolute;
	right: 0;
	top: calc(50% - 5px);
	width: 10px;
}



.BlueprintHint {
	margin-left: calc(16px * var(--indent));
	max-width: 512px;
	position: relative;
}

.BlueprintHint-wrap {
	border-radius: 5px;
	box-sizing: border-box;
	color: var(--color-gray);
	font-family: var(--font-family);
	font-size: var(--font-size-small);
	font-weight: var(--font-weight-medium);
	line-height: 24px;
	overflow: hidden;
	padding: calc(var(--1x) + 2px) calc(var(--2x) + 2px);
	position: relative;
	width: 100%;
}

.BlueprintHint-wrap::before,
.BlueprintHint-wrap::after {
	border: 2px solid var(--color-darker-gray);
	border-radius: 5px;
	bottom: 0;
	content: "";
	display: block;
	left: 0;
	position: absolute;
	right: 0;
	top: 0;
}

.BlueprintHint-wrap::after {
	-o-border-image: var(--gradient-teal-blue) 1;
	   border-image: var(--gradient-teal-blue) 1;
	opacity: 0;
	transition: var(--transition);
}

.BlueprintHint.has-focus .BlueprintHint-wrap::after {
	opacity: 1;
}

.BlueprintHint-text {
	opacity: 1;
	transition: var(--transition);
}

.BlueprintHint.has-focus .BlueprintHint-text {
	opacity: 0;
}

.BlueprintHint-insert {
	align-items: center;
	border: 2px solid var(--color-accent-teal-blue);
	border-radius: 12px;
	display: grid;
	justify-items: center;
	height: 12px;
	left: calc(50% - 12px);
	opacity: 0;
	padding: 4px;
	position: absolute;
	top: calc(50% - 12px);
	transition: var(--transition);
	width: 12px;
}

.BlueprintHint.has-focus .BlueprintHint-insert {
	opacity: 1;
}

.BlueprintHint-insert::before,
.BlueprintHint-insert::after {
	background: var(--color-accent-teal-blue);
	content: "";
	display: block;
	grid-column: 1;
	grid-row: 1;
}

.BlueprintHint-insert::before {
	height: 2px;
	width: 12px;
}

.BlueprintHint-insert::after {
	height: 12px;
	width: 2px;
}

.BlueprintAttributeList {
	align-items: start;
	display: grid;
	gap: var(--4x);
	justify-items: start;
}

.BlueprintAttributeList-list {
	border-top: 2px solid var(--color-darker-gray);
	width: 100%;
}

.BlueprintAttributeList-add {
	background: var(--color-gray);
	border-radius: 32px;
	color: var(--color-darkest-gray);
	cursor: pointer;
	display: grid;
	font-family: var(--font-family);
	font-size: var(--font-size-small);
	font-weight: var(--font-weight-medium);
	height: 32px;
	line-height: 32px;
	padding: 0 var(--2x);
	transition: var(--transition);
	white-space: nowrap;
}

.BlueprintAttributeList-add:hover {
		background: var(--color-white);
	}

.BlueprintComponentAttribute {
	color: var(--color-dark-gray);
	display: grid;
	font-family: var(--font-family-monospace);
	font-size: var(--font-size-x-small);
	font-weight: var(--font-weight-bold);
	grid-auto-columns: max-content;
	grid-auto-flow: column;
	justify-items: start;
	line-height: 20px;
	position: relative;
	white-space: pre;
	z-index: 20;
}

.BlueprintComponentAttribute span {
		display: block;
	}

.BlueprintComponentAttribute-name .EditableString {
		--color: var(--color-accent-teal-blue);
	}

.BlueprintComponentAttribute-value .EditableString div[contenteditable] {
	margin-left: -4px;
	margin-right: -4px;
	padding-left: 4px;
	padding-right: 4px;
}

.BlueprintComponentAttribute.is-object {
	grid-template-columns: max-content max-content 1fr;
}

.BlueprintComponentAttribute.is-object .BlueprintComponentAttribute-value {
	grid-column: 1 / span 3;
	grid-row: 2;
	padding-left: var(--3x);
}

.BlueprintComponentAttribute.is-object .BlueprintComponentAttribute-open {
	grid-column: 3;
	grid-row: 1;
}

.BlueprintComponentAttribute.is-object .BlueprintComponentAttribute-close {
	grid-column: 1;
	grid-row: 3;
}

.is-multi-line > .BlueprintComponentAttribute {
	margin-left: var(--2x);
}

.InsertButton {
	--color: var(--color-gray);
	align-items: center;
	border: 1px solid var(--color);
	border-radius: 3px;
	box-sizing: border-box;
	cursor: pointer;
	display: inline-grid;
	height: 16px;
	justify-items: center;
	position: relative;
	transition: var(--transition);
	width: 16px;
	z-index: 20;
}

.InsertButton:hover {
	--color: var(--color-black);
}

.InsertButton::before,
.InsertButton::after {
	background: var(--color);
	content: "";
	display: block;
	grid-column: 1;
	grid-row: 1;
	transition: var(--transition);
}

.InsertButton::before {
	height: 8px;
	width: 1px;
}

.InsertButton::after {
	height: 1px;
	width: 8px;
}

.is-multi-line > .BlueprintComponentInsert {
	margin-left: var(--2x);
}

.BlueprintComponent {
	align-items: start;
	display: grid;
	gap: var(--1x);
	justify-items: start;
	margin-left: calc(16px * var(--indent, 0));
	padding: 2px 0;
	position: relative;
	width: calc(100% - (16px * var(--indent, 0)));
}

.BlueprintComponent .EditableString {
		z-index: 20;
	}

.BlueprintComponent-markup {
	display: grid;
	font-family: var(--font-family-monospace);
	font-size: var(--font-size-x-small);
	font-weight: var(--font-weight-bold);
	gap: 4px;
	grid-auto-columns: max-content;
	grid-auto-flow: column;
	grid-auto-rows: max-content;
	overflow: auto;
	white-space: pre;
	width: 100%;
}

.BlueprintComponent-markup.is-multi-line {
		align-items: start;
		grid-auto-columns: 100%;
		grid-auto-flow: row;
		justify-items: start;
	}

.BlueprintComponent-tagName {
	color: var(--color-accent-pink);
}

.BlueprintComponent-open,
.BlueprintComponent-close {
	background: var(--color-white);
	border-radius: 5px;
	box-sizing: border-box;
	max-width: 512px;
	min-height: 24px;
	padding: var(--1x) var(--2x);
	transition: var(--transition);
	width: 100%;
}

.BlueprintComponent-body {
	align-items: start;
	display: grid;
	gap: var(--1x);
	justify-items: start;
	padding: 2px 0;
	position: relative;
	transition: var(--transition);
	width: 100%;
	z-index: 20;
}

.BlueprintComponent.is-clone {
	bottom: 0;
	cursor: grab;
	left: 0;
	opacity: 0;
	position: absolute;
	right: 0;
	top: 0;
	z-index: 10;
}

.BlueprintComponent.is-dragging > :is(.BlueprintComponent-open, .BlueprintComponent-close, .BlueprintComponent-body) {
	filter: blur(1px);
	opacity: 0.6;
}

.BlueprintComponent.is-clone.react-draggable-dragging {
	cursor: grabbing;
	opacity: 0.6;
}

.BlueprintInsert {
	height: 0;
	margin-left: calc(16px * var(--indent));
	max-width: 512px;
	position: relative;
	transition: var(--transition);
	width: calc(100% - (16px * var(--indent)));
	will-change: height;
}

.BlueprintInsert.has-focus {
		height: 24px;
	}

.BlueprintInsert-line {
	align-items: center;
	display: grid;
	gap: 4px;
	grid-template-columns: 1fr 24px 1fr;
	height: 24px;
	left: 0;
	opacity: 0;
	position: absolute;
	right: 0;
	top: calc(50% - 12px);
	transition: var(--transition);
	width: 100%;
}

.BlueprintInsert-line::before,
	.BlueprintInsert-line::after {
		border-radius: 1px;
		content: "";
		display: block;
		height: 2px;
	}

.BlueprintInsert-line::before {
		background: linear-gradient(var(--color-accent-teal), var(--color-accent-teal-blue));
	}

.BlueprintInsert-line::after {
		background: linear-gradient(var(--color-accent-teal-blue), var(--color-accent-blue));
	}

.BlueprintInsert-line > div {
		align-items: center;
		border: 2px solid var(--color-accent-teal-blue);
		border-radius: 12px;
		display: grid;
		justify-items: center;
		height: 12px;
		padding: 4px;
		width: 12px;
	}

.BlueprintInsert-line > div::before,
	.BlueprintInsert-line > div::after {
		background: var(--color-accent-teal-blue);
		content: "";
		display: block;
		grid-column: 1;
		grid-row: 1;
	}

.BlueprintInsert-line > div::before {
		height: 2px;
		width: 12px;
	}

.BlueprintInsert-line > div::after {
		height: 12px;
		width: 2px;
	}

.has-focus > .BlueprintInsert-line {
	opacity: 1;
}

.BlueprintComponentList {
	align-items: start;
	display: grid;
	gap: var(--1x);
	justify-items: start;
	width: 100%
}

.BlueprintConnections {
	bottom: 0;
	left: 0;
	position: absolute;
	right: 0;
	top: 0;
	z-index: 10;
}
.BlueprintConnections svg {
		display: block;
		height: 100%;
		width: 100%;
	}
.BlueprintConnections path {
		cursor: not-allowed;
	}

.BlueprintEditor {
    --column-1-width: 20;
    --column-2-width: calc(32 + var(--column-2-depth, 0));
    --grid-gap: 8;
    --grid-padding: 4;
    background: var(--color-darkest-gray);
    border-radius: 9px;
    height: 100%;
    overflow: hidden;
    position: relative;
    z-index: 1;
}

.BlueprintEditor-banner {
    align-items: center;
    -webkit-backdrop-filter: blur(4px);
            backdrop-filter: blur(4px);
    background: #ffffffbf;
    border-radius: var(--8x);
    box-shadow: 0 var(--1x) var(--3x) rgba(0, 0, 0, 0.1);
    bottom: var(--3x);
    cursor: pointer;
    display: grid;
    grid-template-columns: 1fr max-content;
    height: var(--6x);
    left: var(--3x);
    padding: var(--1x) var(--1x) var(--1x) var(--3x);
    position: absolute;
    right: var(--3x);
    transition: var(--transition);
    z-index: 50;
}

.BlueprintEditor-banner p {
        color: var(--color-black);
        font-size: var(--font-size-large);
        font-weight: var(--font-weight-semi-bold);
        margin: 0;
    }

.BlueprintEditor-banner:hover {
        background: #ffffff;
    }

.BlueprintEditor-scroll {
    height: 100%;
    overflow: auto;
    width: 100%;
}

.BlueprintEditor-scroll::after {
        content: "";
        display: block;
        height: var(--11x);
    }

.BlueprintEditor-grid {
    background: var(--color-black);
    display: flex;
    flex-shrink: 0;
    height: 100%;
    left: 0;
    -webkit-mask-image: url("../assets/images/grid-lines.png");
            mask-image: url("../assets/images/grid-lines.png");
    -webkit-mask-repeat: repeat;
            mask-repeat: repeat;
    -webkit-mask-position: -1px -1px;
            mask-position: -1px -1px;
    -webkit-mask-size: 16px;
            mask-size: 16px;
    opacity: 0.25;
    position: absolute;
    top: 0;
    width: 100%;
    z-index: -1;
}

.BlueprintEditor-wrap {
    align-items: center;
    box-sizing: border-box;
    display: flex;
    min-height: 100%;
    position: relative;
    width: calc(
        16px *
            (
                var(--column-1-width) + var(--column-2-width) + var(--grid-gap) +
                    (var(--grid-padding) * 2)
            ) - 1px
    );
}

.BlueprintEditor-columns {
    align-items: center;
    box-sizing: border-box;
    display: grid;
    flex-shrink: 0;
    gap: calc(16px * var(--grid-gap));
    grid-template-columns: calc(var(--column-1-width) * 16px) calc(
            var(--column-2-width) * 16px
        );
    min-height: 100%;
    min-width: 100%;
    padding: calc(16px * var(--grid-padding));
    padding-right: calc(16px * var(--grid-padding) - 1px);
}

.BlueprintEditor-column {
    display: grid;
    gap: var(--4x);
    position: relative;
    z-index: 20;
}

.BlueprintEditor-label {
    color: var(--color-gray);
    display: block;
    font-family: var(--font-family);
    font-size: 16px;
    font-weight: var(--font-weight-medium);
    line-height: 16px;
}



.BlueprintSidebarItem {
    background: var(--color-white);
    background-clip: border-box;
    border: 2px solid var(--color-black);
    border-radius: 7px;
    box-shadow: var(--box-shadow-low);
    cursor: grab;
    font-size: var(--font-size-small);
    padding: calc(var(--2x) + 2px);
    position: relative;
}

.BlueprintSidebarItem::after {
        bottom: 0;
        content: "";
        display: block;
        left: 0;
        position: absolute;
        right: 0;
        top: 0;
        z-index: 9;
    }

.BlueprintSidebarItem.is-clone {
    bottom: 0;
    left: 0;
    opacity: 0;
    position: absolute;
    right: 0;
    top: 0;
    z-index: 10;
}

.BlueprintSidebarItem.is-clone.react-draggable-dragging {
    cursor: grabbing;
    opacity: 0.6;
}

.BlueprintSidebarItem-label {
    color: var(--color-darkest-black);
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-semi-bold);
    text-align: center;
}

.BlueprintSidebarItem.is-html .BlueprintSidebarItem-label {
    font-family: var(--font-family-monospace);
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-bold);
}

.BlueprintSidebarItem-description {
    color: var(--color-darker-gray);
    text-align: center;
}

.BlueprintSidebarItem-icon {
    display: block;
    height: var(--4x);
    margin: 0 auto var(--1x);
    -o-object-fit: contain;
       object-fit: contain;
    -o-object-position: center;
       object-position: center;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    width: var(--4x);
}

.BlueprintSidebarComponentsPanel {
	transition: var(--transition);
}
.BlueprintSidebarComponentsPanel:not(.is-active) {
		opacity: 0;
		transform: translateX(100%);
	}

.BlueprintContextualAttributeNameHelp {
	display: grid;
	gap: var(--5x);
	grid-auto-flow: row;
	grid-template-columns: 100%;
}

.BlueprintContextualAttributeNameHelp h3 {
		color: var(--color-black);
		font-size: var(--font-size-large);
		font-weight: var(--font-weight-bold);
		margin: 0 0 var(--1x);
	}

.BlueprintContextualAttributeNameHelp h3:last-child {
			margin-bottom: 0;
		}

.BlueprintContextualAttributeNameHelp h4 {
		color: var(--color-black);
		font-size: var(--font-size-base);
		font-weight: var(--font-weight-bold);
		margin: 0 0 var(--1x);
	}

.BlueprintContextualAttributeNameHelp h5 {
		color: var(--color-black);
		font-size: var(--font-size-small);
		font-weight: var(--font-weight-bold);
		margin: var(--3x) 0 var(--1x);
	}

.BlueprintContextualAttributeNameHelp p {
		color: var(--color-black);
		font-size: var(--font-size-small);
		margin: 0 0 var(--1x);
	}

.BlueprintContextualAttributeNameHelp p:last-child {
			margin-bottom: 0;
		}

.BlueprintContextualAttributeNameHelp ul {
		font-size: var(--font-size-small);
		list-style: disc;
		margin: 0 0 var(--3x) var(--2x);
	}

.BlueprintContextualAttributeNameHelp ul:last-child {
			margin-bottom: 0;
		}

.BlueprintContextualAttributeNameHelp li {
		margin: 0;
	}

.BlueprintContextualAttributeNameHelp li + li {
		margin-top: var(--1x);
	}

.BlueprintContextualAttributeNameHelp-suggestedValues {
	display: flex;
	flex-wrap: wrap;
	gap: var(--1x);
	width: 100%;
}

.BlueprintContextualAttributeNameHelp-suggestedValues > div {
		background: var(--color-white);
		border-radius: 5px;
		box-shadow: 0 1px 9px rgba(0, 0, 0, 0.1);
		cursor: pointer;
		display: inline-block;
		flex-grow: 0;
		flex-shrink: 0;
		font-family: var(--font-family-monospace);
		font-size: var(--font-size-x-small);
		font-weight: var(--font-weight-bold);
		padding: 0 0.4em;
	}


.BlueprintSidebarContextPanel {
	transition: var(--transition);
}
.BlueprintSidebarContextPanel:not(.is-active) {
		opacity: 0;
		transform: translateX(-100%);
	}

.BlueprintSidebar {
    display: grid;
    grid-template-columns: 100%;
    grid-template-rows: 100%;
    overflow: hidden;
    position: relative;
    z-index: 2;
}

.BlueprintSidebar > div {
        box-sizing: border-box;
        grid-column: 1;
        grid-row: 1;
        height: 100%;
        overflow: auto;
        padding: 0 3px 0 var(--3x);
        width: 100%;
    }

.BlueprintSidebar.is-dragging,
.BlueprintSidebar.is-dragging > div {
    overflow: visible;
}

.BlueprintSidebar-heading {
    color: var(--color-black);
    font-size: var(--font-size-large);
    font-weight: var(--font-weight-bold);
    margin: var(--5x) 0 var(--1x);
}

.BlueprintSidebar-heading:first-child {
        margin-top: 0;
    }

.BlueprintSidebar-grid {
    display: grid;
    gap: var(--2x);
    grid-template-columns: repeat(var(--columns, 1), minmax(0, 1fr));
}

.PageBlueprint {
	box-sizing: border-box;
	display: grid;
	height: var(--app-height);
	padding: var(--5x);
}

.PageBlueprint-view {
	--sidebar-width: 340px;
	align-items: stretch;
	display: grid;
	grid-template-columns: calc(100% - var(--sidebar-width)) var(--sidebar-width);
	grid-template-rows: 100%;
	overflow: hidden;
	-webkit-user-select: none;
	   -moz-user-select: none;
	        user-select: none;
}

.CssEditor {
	height: 100%;
}
.CssEditor > div,
	.CssEditor .cm-editor {
		height: 100%;
		width: 100%;
	}
.CssEditor .cm-editor {
		border: 1px solid var(--color-gray);
		border-radius: 9px;
		font-family: var(--font-family-monospace);
		font-size: var(--font-size-small);
		font-weight: var(--font-weight-base);
		line-height: 1.75;
		overflow: hidden;
	}
.CssEditor .cm-editor.cm-focused {
		outline: none;
	}

.CssSidebar {
	display: grid;
	grid-template-columns: 100%;
	grid-template-rows: 100%;
	overflow: hidden;
	position: relative;
	z-index: 2;
}

.CssSidebar > div {
		box-sizing: border-box;
		grid-column: 1;
		grid-row: 1;
		height: 100%;
		overflow: auto;
		padding: var(--5x) var(--3x);
		width: 100%;
	}

.CssSidebar-heading h3 {
		color: var(--color-black);
		font-size: var(--font-size-large);
		font-weight: var(--font-weight-bold);
		margin: 0 0 var(--1x);
	}

.CssSidebar-heading h3:last-child {
			margin-bottom: 0;
		}

.CssSidebar-heading p {
		color: var(--color-black);
		font-size: var(--font-size-small);
		margin: 0 0 var(--1x);
	}

.CssSidebar-heading p:last-child {
			margin-bottom: 0;
		}


.CssSidebar-propertyList {
	align-items: start;
	display: grid;
	gap: var(--1x);
	grid-auto-flow: row;
	grid-template-columns: 100%;
}

.CssSidebar-property {
	align-items: start;
	background: var(--color-white);
	border-radius: 5px;
	box-shadow: 0 1px 9px rgba(0, 0, 0, 0.1);
	color: var(--color-black);
	-moz-column-gap: var(--1x);
	     column-gap: var(--1x);
	cursor: pointer;
	display: grid;
	grid-auto-flow: row;
	grid-template-columns: 100%;
	grid-template-rows: max-content max-content;
	flex-grow: 0;
	flex-shrink: 0;
	font-family: var(--font-family-monospace);
	font-size: var(--font-size-x-small);
	justify-content: start;
	overflow: hidden;
	padding: var(--1x);
	position: relative;
	white-space: nowrap;
}

.CssSidebar-property.has-preview {
	grid-template-columns: minmax(0, 1fr) 36px;
}

.CssSidebar-propertyName {
	color: var(--color-dark-slate);
	grid-column: 1;
	overflow: hidden;
}

.CssSidebar-propertyValue {
	font-weight: var(--font-weight-bold);
	grid-column: 1;
	overflow: hidden;
}

.CssSidebar-propertyPreview {
	aspect-ratio: 1 / 1;
	background: var(--property-value, var(--color-light-slate));
	border: 1px solid var(--color-slate);
	border-radius: 3px;
	box-shadow: 0 0 var(--1x) #fff;
	box-sizing: border-box;
	grid-column: 2;
	grid-row: 1 / span 2;
	height: 36px;
	width: 36px;
}

.PageEditorCss {
	box-sizing: border-box;
	display: grid;
	height: var(--app-height);
	padding: var(--5x);
}

.PageEditorCss-view {
	--sidebar-width: 340px;
	align-items: stretch;
	background: var(--color-lighter-gray);
	border-radius: 9px;
	display: grid;
	grid-template-columns: calc(100% - var(--sidebar-width)) var(--sidebar-width);
	grid-template-rows: 100%;
	overflow: hidden;
	-webkit-user-select: none;
	   -moz-user-select: none;
	        user-select: none;
}

.PageViewCss {
	box-sizing: border-box;
	display: grid;
	height: var(--app-height);
	padding: var(--5x);
}

.PageViewCss-view {
	--sidebar-width: 340px;
	align-items: stretch;
	background: var(--color-lighter-gray);
	border-radius: 9px;
	display: grid;
	grid-template-columns: calc(100% - var(--sidebar-width)) var(--sidebar-width);
	grid-template-rows: 100%;
	overflow: hidden;
	-webkit-user-select: none;
	   -moz-user-select: none;
	        user-select: none;
}

.LoadingIcon {
    display: block;
    margin: 0 auto;
    position: relative;
    width: var(--9x);
    height: var(--2x);
}

.LoadingIcon div {
        position: absolute;
        top: 0;
        width: var(--2x);
        height: var(--2x);
        border-radius: 100%;
        background: var(--color-gray);
        animation-timing-function: cubic-bezier(0, 1, 1, 0);
    }

.LoadingIcon div:nth-child(1) {
        left: var(--1x);
        animation: blueprint-blocks-block-editor-loading-icon-1 0.6s infinite;
    }

.LoadingIcon div:nth-child(2) {
        left: var(--1x);
        animation: blueprint-blocks-block-editor-loading-icon-2 0.6s infinite;
    }

.LoadingIcon div:nth-child(3) {
        left: var(--4x);
        animation: blueprint-blocks-block-editor-loading-icon-2 0.6s infinite;
    }

.LoadingIcon div:nth-child(4) {
        left: var(--7x);
        animation: blueprint-blocks-block-editor-loading-icon-3 0.6s infinite;
    }

@keyframes blueprint-blocks-block-editor-loading-icon-1 {
    0% {
        transform: scale(0);
    }
    100% {
        transform: scale(1);
    }
}

@keyframes blueprint-blocks-block-editor-loading-icon-2 {
    0% {
        transform: translate(0, 0);
    }
    100% {
        transform: translate(var(--3x), 0);
    }
}

@keyframes blueprint-blocks-block-editor-loading-icon-3 {
    0% {
        transform: scale(1);
    }
    100% {
        transform: scale(0);
    }
}

.SaveDialog {
    background: #ffffff40;
    height: 100%;
    opacity: 0;
    position: absolute;
    top: 0;
    width: 100%;
    transition: var(--transition);
    z-index: 100;
}

.SaveDialog.is-visible {
    -webkit-backdrop-filter: blur(4px);
            backdrop-filter: blur(4px);
    opacity: 1;
}

.SaveDialog-wrap {
    align-items: center;
    box-sizing: border-box;
    display: grid;
    grid-template-columns: 100%;
    grid-template-rows: 100%;
    height: var(--app-height);
    justify-items: center;
    padding: var(--8x);
    position: sticky;
    top: var(--wp-admin--admin-bar--height);
    width: 100%;
}

.SaveDialog-window {
    background: var(--color-white);
    border-radius: 9px;
    box-shadow: var(--box-shadow-low);
    box-sizing: border-box;
    display: grid;
    gap: var(--8x);
    grid-auto-flow: row;
    max-width: 960px;
    padding: var(--5x) var(--8x);
    transform: scale(0.8);
    transform-origin: center;
    transition: var(--transition);
    width: 100%;
}

.SaveDialog.is-visible .SaveDialog-window {
    transform: scale(1);
}

.SaveDialog-close {
    --color: var(--color-dark-gray);
    --background-color: var(--color-lighter-gray);
    align-items: center;
    background: var(--background-color);
    border-radius: var(--4x);
    cursor: pointer;
    display: grid;
    height: var(--4x);
    justify-items: center;
    position: absolute;
    right: var(--2x);
    top: var(--2x);
    transition: var(--transition);
    width: var(--4x);
}

.SaveDialog-close::before,
    .SaveDialog-close::after {
        background: var(--color);
        content: "";
        display: block;
        grid-column: 1;
        grid-row: 1;
        height: var(--2x);
        transition: var(--transition);
        width: 3px;
    }

.SaveDialog-close::before {
        transform: rotate(-45deg);
    }

.SaveDialog-close::after {
        transform: rotate(45deg);
    }

.SaveDialog-close:hover {
    --color: var(--color-white);
    --background-color: var(--color-darker-gray);
}

.SaveDialog-content {
    color: var(--color-black);
    display: grid;
    font-size: var(--font-size-large);
    font-weight: var(--font-weight-base);
    gap: var(--5x);
    grid-auto-flow: row;
    width: 100%;
}

.SaveDialog-content h1 {
        color: var(--color-black);
        font-size: var(--font-size-xx-large);
        font-weight: var(--font-weight-bold);
        line-height: 1;
        margin: 0 0 var(--1x);
    }

.SaveDialog-content h1:last-child {
            margin-bottom: 0;
        }

.SaveDialog-content h3 {
        color: var(--color-black);
        font-size: var(--font-size-large);
        font-weight: var(--font-weight-bold);
        line-height: 1;
        margin: 0 0 var(--2x);
    }

.SaveDialog-content h3:last-child {
            margin-bottom: 0;
        }

.SaveDialog-content p {
        margin: 0 0 var(--2x);
    }

.SaveDialog-content p:last-child {
            margin-bottom: 0;
        }

.SaveDialog-content ul {
        list-style: none;
    }

.SaveDialog-content li {
        display: grid;
        gap: var(--1x);
        grid-template-columns: var(--1x) 1fr;
        position: relative;
    }

.SaveDialog-content li:before {
            background: var(--color-lighter-gray);
            border-radius: 100%;
            content: "";
            display: block;
            height: var(--1x);
            position: relative;
            top: 11px;
            width: var(--1x);
        }

.SaveDialog-content hr {
        background: var(--color-lighter-gray);
        border: 0;
        display: block;
        height: 2px;
        overflow: hidden;
        width: 100%;
    }

.SaveDialog-icon {
    display: block;
    height: 35px;
    margin-bottom: var(--3x);
    -o-object-fit: contain;
       object-fit: contain;
    -o-object-position: center;
       object-position: center;
    width: 40px;
}

.Logo {
    align-items: center;
    display: grid;
    gap: var(--1x);
    grid-auto-columns: max-content;
    grid-auto-flow: column;
}

.Logo h1 {
        color: var(--color-black);
        font-size: 40px;
        letter-spacing: -0.05em;
        line-height: 1;
        margin: 0;
    }

.Logo-pro {
    background: var(--gradient-teal-blue);
    border-radius: var(--3x);
    color: var(--color-white);
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-bold);
    height: var(--3x);
    line-height: var(--3x);
    padding: 0 12px;
    text-transform: uppercase;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    width: -moz-fit-content;
    width: fit-content;
}

.UpsellDialog {
    background: #ffffff40;
    height: 100%;
    opacity: 0;
    position: absolute;
    top: 0;
    width: 100%;
    transition: var(--transition);
    z-index: 100;
}

.UpsellDialog.is-visible {
    -webkit-backdrop-filter: blur(4px);
            backdrop-filter: blur(4px);
    opacity: 1;
}

.UpsellDialog-wrap {
    align-items: center;
    box-sizing: border-box;
    display: grid;
    grid-template-columns: 100%;
    grid-template-rows: 100%;
    height: var(--app-height);
    justify-items: center;
    padding: var(--8x);
    position: sticky;
    top: var(--wp-admin--admin-bar--height);
    width: 100%;
}

.UpsellDialog-window {
    background: var(--color-white);
    border-radius: 9px;
    box-shadow: var(--box-shadow-low);
    box-sizing: border-box;
    display: grid;
    gap: var(--8x);
    grid-auto-flow: row;
    max-width: 960px;
    padding: var(--5x) var(--8x);
    transform: scale(0.8);
    transform-origin: center;
    transition: var(--transition);
    width: 100%;
}

.UpsellDialog.is-visible .UpsellDialog-window {
    transform: scale(1);
}

.UpsellDialog-close {
    --color: var(--color-dark-gray);
    --background-color: var(--color-lighter-gray);
    align-items: center;
    background: var(--background-color);
    border-radius: var(--4x);
    cursor: pointer;
    display: grid;
    height: var(--4x);
    justify-items: center;
    position: absolute;
    right: var(--2x);
    top: var(--2x);
    transition: var(--transition);
    width: var(--4x);
}

.UpsellDialog-close::before,
    .UpsellDialog-close::after {
        background: var(--color);
        content: "";
        display: block;
        grid-column: 1;
        grid-row: 1;
        height: var(--2x);
        transition: var(--transition);
        width: 3px;
    }

.UpsellDialog-close::before {
        transform: rotate(-45deg);
    }

.UpsellDialog-close::after {
        transform: rotate(45deg);
    }

.UpsellDialog-close:hover {
    --color: var(--color-white);
    --background-color: var(--color-darker-gray);
}

.UpsellDialog-content {
    display: grid;
    gap: var(--3x);
    grid-auto-flow: row;
    width: 100%;
}

.UpsellDialog-content p {
        color: var(--color-dark-gray);
        font-size: var(--font-size-large);
        font-weight: var(--font-weight-medium);
        margin: 0;
    }

.UpsellDialog-try {
    align-items: center;
    border: 2px solid var(--color-lighter-gray);
    border-radius: 7px;
    display: grid;
    gap: var(--2x);
    grid-template-columns: max-content 1fr;
    font-size: var(--font-size-large);
    font-weight: var(--font-weight-bold);
    padding: var(--1x) var(--2x);
    width: -moz-fit-content;
    width: fit-content;
}

.UpsellDialog-try::before {
        background: url("../assets/images/icon-badge.png") no-repeat center;
        background-size: contain;
        content: "";
        display: block;
        height: var(--3x);
        width: var(--3x);
    }

.UpsellDialog-tiles {
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
}

.UpsellDialog-tile {
    display: grid;
    gap: var(--3x);
    grid-auto-flow: row;
}

.UpsellDialog-tile:nth-child(1) {
        border-right: 1px solid var(--color-lighter-gray);
        padding-right: var(--3x);
    }

.UpsellDialog-tile:nth-child(2) {
        border-left: 1px solid var(--color-lighter-gray);
        padding-left: var(--3x);
    }

.UpsellDialog-tile h3 {
        color: var(--color-black);
        font-size: var(--font-size-large);
        margin: 0;
    }

.UpsellDialog-tile p {
        color: var(--color-gray);
        font-size: var(--font-size-base);
        margin: 0;
    }

.UpsellDialog-pricing {
    color: var(--color-black);
    font-size: var(--font-size-xx-large);
    font-weight: var(--font-weight-bold);
    letter-spacing: -0.05em;
    vertical-align: baseline;
}

.UpsellDialog-pricing span {
        color: var(--color-gray);
        font-size: var(--font-size-base);
        font-weight: var(--font-weight-medium);
        letter-spacing: 0;
    }

.App {
    --1x: 8px;
    --2x: 16px;
    --3x: 24px;
    --4x: 32px;
    --5x: 40px;
    --6x: 48px;
    --7x: 56px;
    --8x: 64px;
    --9x: 72px;
    --10x: 80px;
    --11x: 88px;
    --12x: 96px;

    --color-white: #fff;
    --color-black: #272432;

    --color-lighter-gray: #e9ebeb;
    --color-light-gray: #c2c2c2;
    --color-gray: #9a9a9a;
    --color-dark-gray: #7c7c7c;
    --color-darker-gray: #5d5d5d;
    --color-darkest-gray: #272432;

    --color-light-slate: #d6e5ef;
    --color-slate: #a3bfd4;
    --color-dark-slate: #8198a7;
    --color-darker-slate: #5d7382;

    --color-accent-teal: #00ffba;
    --color-accent-teal-00: #00ffba00;
    --color-accent-teal-blue: #00b2d0;
    --color-accent-blue: #006be5;
    --color-accent-blue-00: #006be500;
    --color-accent-purple: #7f1192;
    --color-accent-pink: #b10a50;
    --color-accent-red: #e6255d;
    --color-accent-orange: #ef3e23;
    --color-accent-yellow: #ea971a;

    --color-error: #ed00631a;

    --color-code-property: #b10a50;
    --color-code-value: #ea971a;

    --gradient-orange-red: linear-gradient(
        150deg,
        var(--color-accent-orange),
        var(--color-accent-red)
    );
    --gradient-teal-blue: linear-gradient(
        150deg,
        var(--color-accent-teal),
        var(--color-accent-blue)
    );
    --gradient-teal-blue-transparent: linear-gradient(
        90deg,
        var(--color-accent-teal-00) 0%,
        var(--color-accent-teal) 20%,
        var(--color-accent-blue) 80%,
        var(--color-accent-blue-00) 100%
    );
    --gradient-gray: linear-gradient(
        150deg,
        var(--color-lighter-gray),
        var(--color-gray)
    );
    --gradient-light-gray: linear-gradient(
        150deg,
        var(--color-lighter-gray),
        var(--color-light-gray)
    );
    --gradient-white: linear-gradient(
        150deg,
        var(--color-white),
        var(--color-lighter-gray)
    );
    --gradient-purple-pink: radial-gradient(
        ellipse at bottom,
        #9e05e6,
        #5200bb
    );

    --font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
        Oxygen-Sans, Ubuntu, Cantarell, "Helvetica Neue", sans-serif;
    --font-family-monospace: "Fira Mono", monospace;

    --font-size-base: 16px;
    --font-size-large: 20px;
    --font-size-x-large: 28px;
    --font-size-xx-large: 40px;
    --font-size-small: 14px;
    --font-size-x-small: 12px;

    --font-weight-base: 300;
    --font-weight-medium: 400;
    --font-weight-semi-bold: 500;
    --font-weight-bold: 600;

    --line-height-base: 1.5;

    --box-shadow-medium: 0 3px 15px #27243233;
    --box-shadow-low: 3px 3px 0 #27243233;
    --box-shadow-x-low: 2px 2px 0 #27243233;

    --transition: all 0.15s cubic-bezier(0.55, 0.055, 0.675, 0.19);
    --transition-slow: all 0.9s cubic-bezier(0.55, 0.055, 0.675, 0.19);

    --app-height: max(
        680px,
        calc(100vh - 65px - var(--wp-admin--admin-bar--height))
    );
    --navigator-height: var(--7x);

    background: #f0f0f1;
    color: var(--color-black);
    display: grid;
    grid-template-rows: 65px max-content;
    font-family: var(--font-family);
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-base);
    line-height: var(--line-height-base);
    position: relative;
    z-index: 10;
}
.App .is-disabled {
        cursor: default;
        opacity: 0.5;
        -webkit-user-select: none;
           -moz-user-select: none;
                user-select: none;
    }
.App p {
        font-size: inherit;
        line-height: inherit;
    }



@font-face {
	font-family: "Fira Mono";
	font-weight: 300;
	src: url('../assets/fonts/fira-mono/fira-mono-regular.woff2') format('woff2');
}

@font-face {
	font-family: "Fira Mono";
	font-weight: 400;
	src: url('../assets/fonts/fira-mono/fira-mono-medium.woff2') format('woff2');
}

#wpcontent {
	padding-left: 0;
}

#wpfooter {
	display: none;
}

#wpbody {
	align-items: stretch;
	min-height: calc(100vh - var(--wp-admin--admin-bar--height, 0px));
}
